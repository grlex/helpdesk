# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'



    app.menu_builder:
        class: AppBundle\Menu\Builder
        arguments: [ '@security.authorization_checker' ]

    app.main_menu:
        class: Knp\Menu\MenuItem
        factory: ["@app.menu_builder", createMainMenu]
        public: true
        tags:
            - { name: knp_menu.menu, alias: main }


    custom_html_purifier:
        class: AppBundle\FOSComment\HtmlPurifier
        arguments: [ '@exercise_html_purifier.default' ]
        public: true

    #markup.exercise_html_purifier:
    #    class: FOS\CommentBundle\Markup\HtmlPurifier
    #    arguments: [ '@exercise_html_purifier.default' ]

    fos_comment.custorm_manager.comment:
        class: AppBundle\FOSComment\ModifiedCommentManager
        arguments:
            - "@event_dispatcher"
            - "@fos_comment.sorting_factory"
            - "@fos_comment.entity_manager"
            - "%fos_comment.model.comment.class%"
        public: true

    AppBundle\FOSComment\DoctrineEventSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    fos_event_subscriber:
        class: AppBundle\FOSComment\EventSubscriber

    app.file_manager:
        class: AppBundle\FileManager\FileManager
        arguments:
            - '@AppBundle\FileManager\Storage\ChainedStorage'
           # - '@AppBundle\FileManager\Cleaner\DefaultCleaner'
            - '@AppBundle\FileManager\Cleaner\SessionGCCleaner'
            - '@doctrine'
        tags:
            - { name: doctrine.event_listener, event: preRemove }

    AppBundle\FileManager\FileManager: '@app.file_manager'

    AppBundle\FileManager\Storage\GeneralStorage:
        arguments: ['%file_storage_path%']

    AppBundle\FileManager\Storage\ImageStorage:
        arguments: ['%file_storage_path%']

    AppBundle\FileManager\Storage\ChainedStorage:
        calls:
             - { method: 'addStorage', arguments: ['image', '@AppBundle\FileManager\Storage\ImageStorage'] }
             - { method: 'addStorage', arguments: ['general', '@AppBundle\FileManager\Storage\GeneralStorage'] }

    AppBundle\FileManager\Cleaner\SessionGCCleaner:
        arguments: []
    AppBundle\Form\Transformer\FileTransformer:
        arguments:
            - '@doctrine'

    AppBundle\Form\FileType:
        arguments:
            - '@AppBundle\Form\Transformer\FileTransformer'
        tags:
            - { name: 'form.type' }

    session.handler:
        class: AppBundle\Session\SessionHandler





